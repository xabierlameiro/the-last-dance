name: Dev workflow
on:
    push:
        branches: [dev]
jobs:
    unit-tests-and-deploy:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/dev'
        env:
            NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
            - name: Install dependencies
              run: |
                  echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
                  echo "@xabierlameiro:registry=https://npm.pkg.github.com/" >> ~/.npmrc
                  yarn install --frozen-lockfile
            - name: Linter
              run: yarn run lint
            - name: Run unit tests
              run: yarn run test
            - name: Publish coverage report
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_COVERAGE_PROJECT_ID }}
              run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
            - name: Publish storybook
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_STORYBOOK_PROJECT_ID }}
              run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
            - name: Install Vercel CLI
              run: npm install --global vercel@canary
            - name: Trigger Vercel Deployment
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
              run: |
                  vercel deploy --token=${{ secrets.VERCEL_TOKEN }} >> deploy-url.txt
                  echo URL=$(cat deploy-url.txt) >> $GITHUB_ENV
                  echo NEXT_PUBLIC_DOMAIN=$(cat deploy-url.txt) >> $GITHUB_ENV
            - name: Install Playwright Browsers
              run: npx playwright install --with-deps chromium
            - name: Run end-to-end tests
              id: e2e
              run: |
                  yarn test:e2e:report
            - name: Calculate SHA256 digest
              run: |
                  sha256=$(openssl dgst -sha256 -binary playwright-report/index.html | base64)
                  echo "::set-output name=sha256::$sha256"
            - name: Upload file to Vercel
              run: |
                  curl --location --request POST 'https://api.vercel.com/v2/now/files' \
                  --header "x-vercel-digest: ${{ steps.calculate_sha256.outputs.sha256 }}" \
                  --header "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
                  --header 'Content-Type: text/html' \
                  --data-binary '@playwright-report/index.html'
            - name: Create deployment on Vercel
              run: |
                  curl --location --request POST 'https://api.vercel.com/v13/deployments?teamId=${{ secrets.VERCEL_ORG_ID }}' \
                  --header 'Content-Type: application/json' \
                  --header "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
                  --data-raw '{
                      "name": "the-last-dance-e2e",
                      "files": [
                          {
                              "file": "playwright-report/index.html",
                              "sha": "'${{ steps.calculate_sha256.outputs.sha256 }}'",
                              "size": '${{ steps.file_size.outputs.file_size }}'
                          }
                      ],
                      "projectSettings": {
                          "framework": null
                      }
                  }'
