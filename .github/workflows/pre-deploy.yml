name: Dev workflow
on:
    push:
        branches: [dev]
jobs:
    unit-tests-and-deploy:
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/dev'
        env:
            NEXT_PUBLIC_DOMAIN: ${{ secrets.NEXT_PUBLIC_DOMAIN }}
            VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
            VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: yarn
            - name: Install dependencies
              run: |
                  echo "//npm.pkg.github.com/:_authToken=${{ secrets.NPM_TOKEN }}" >> ~/.npmrc
                  echo "@xabierlameiro:registry=https://npm.pkg.github.com/" >> ~/.npmrc
                  yarn install --frozen-lockfile
            - name: Linter
              if: false
              run: yarn run lint
            - name: Run unit tests
              if: false
              run: yarn run test
            - name: Publish coverage report
              if: false
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_COVERAGE_PROJECT_ID }}
              run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
            - name: Publish storybook
              if: false
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_STORYBOOK_PROJECT_ID }}
              run: vercel deploy --token=${{ secrets.VERCEL_TOKEN }}
            - name: Install Vercel CLI
              run: npm install --global vercel@canary
            - name: Trigger Vercel Deployment
              if: false
              env:
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
              run: |
                  vercel deploy --token=${{ secrets.VERCEL_TOKEN }} >> deploy-url.txt
                  echo URL=$(cat deploy-url.txt) >> $GITHUB_ENV
                  echo NEXT_PUBLIC_DOMAIN=$(cat deploy-url.txt) >> $GITHUB_ENV
            - name: Install Playwright Browsers
              run: npx playwright install --with-deps chromium
            - name: Run end-to-end tests
              id: e2e
              run: |
                  yarn test:e2e:report
            - name: Upload e2e report
              run: |
                  html=$(cat playwright-report/index.html)
                  curl -X POST \
                  -H "Authorization: Bearer ${{ secrets.VERCEL_TOKEN }}" \
                  -H "Content-Type: application/json" \
                  --data '{
                    "name": "the-last-dance-e2e", 
                    "files": [{
                      "file":"index.html", 
                      "data": "'$(echo $html | base64 -w 0)'"
                    }], 
                    "projectSettings": {
                      "framework": null, 
                      "buildCommand": "echo '\''no build step required'\''", 
                      "outputDirectory": "/"}
                  }' \
                  "https://api.vercel.com/v13/deployments?teamId=${{ secrets.VERCEL_ORG_ID }}"
